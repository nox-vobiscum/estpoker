name: E2E (Playwright)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Base URL (e.g., https://ep.noxvobiscum.at)'
        required: false
        type: string
      room_url:
        description: 'Full room URL (overrides base_url)'
        required: false
        type: string

jobs:
  guardrails:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: node -v && npm -v
      - run: npm i
      - run: npm run check

  e2e:
    needs: guardrails
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      # Defaults aus Secrets (linter-sicher). Können leer sein.
      EP_BASE_URL: ${{ secrets.EP_BASE_URL || '' }}
      EP_ROOM_URL: ${{ secrets.EP_ROOM_URL || '' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: node -v && npm -v

      - name: 'Resolve inputs → env'
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [ -n "${{ inputs.base_url }}" ]; then echo "EP_BASE_URL=${{ inputs.base_url }}" >> $GITHUB_ENV; fi
          if [ -n "${{ inputs.room_url }}" ]; then echo "EP_ROOM_URL=${{ inputs.room_url }}" >> $GITHUB_ENV; fi

      - name: 'Preflight: build target URL'
        id: target
        run: |
          TARGET="$EP_ROOM_URL"
          if [ -z "$TARGET" ] && [ -n "$EP_BASE_URL" ]; then
            TARGET="${EP_BASE_URL%/}/room?participantName=E2E&roomCode=E2E-0001"
          fi
          echo "EP_TARGET_URL=$TARGET" >> $GITHUB_ENV
          echo "target=$TARGET" >> $GITHUB_OUTPUT
          if [ -z "$TARGET" ]; then echo "no_url=true"  >> $GITHUB_OUTPUT; else echo "no_url=false" >> $GITHUB_OUTPUT; fi
          echo "Resolved EP_BASE_URL=${EP_BASE_URL:-<empty>}"
          echo "Resolved EP_ROOM_URL=${EP_ROOM_URL:-<empty>}"
          echo "Resolved EP_TARGET_URL=${TARGET:-<empty>}"

      - name: 'Skip E2E (no URL provided)'
        if: ${{ steps.target.outputs.no_url == 'true' }}
        run: |
          echo "No EP_BASE_URL / EP_ROOM_URL provided → skipping E2E."

      - name: 'Preflight: probe EP_TARGET_URL'
        if: ${{ steps.target.outputs.no_url != 'true' }}
        run: |
          echo "Probing $EP_TARGET_URL ..."
          curl -fsSLI --max-time 15 "$EP_TARGET_URL" -o /dev/null
          echo "Probe OK."

      - name: Install Playwright browsers
        if: ${{ steps.target.outputs.no_url != 'true' }}
        run: npx -y @playwright/test@latest install --with-deps

      - name: 'Sanity check (runner available)'
        if: ${{ steps.target.outputs.no_url != 'true' }}
        run: npx -y @playwright/test@latest --version

      - name: Run Playwright E2E
        if: ${{ steps.target.outputs.no_url != 'true' }}
        env:
          EP_BASE_URL: ${{ env.EP_BASE_URL }}
          EP_ROOM_URL: ${{ env.EP_ROOM_URL }}
        run: |
          npx -y @playwright/test@latest test tests/toggles.spec.js \
            --reporter=line \
            --workers=1 \
            --timeout=20000
