name: E2E (Playwright)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TZ: Europe/Vienna
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Resolve EP_BASE_URL without expressions inside "run:" (keeps linters happy)
      - name: Resolve EP_BASE_URL (lint-friendly)
        env:
          EP1: ${{ secrets.EP_BASE_URL }}
          EP2: ${{ secrets.E2E_BASE_URL }}
          EP3: ${{ vars.EP_BASE_URL }}
          EP4: ${{ vars.E2E_BASE_URL }}
        shell: bash
        run: |
          EP="${EP1:-${EP2:-${EP3:-${EP4:-http://localhost:8080}}}}"
          echo "EP_BASE_URL=$EP" >> "$GITHUB_ENV"
          echo "BASE_URL=$EP"   >> "$GITHUB_ENV"

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'                 # uses package-lock.json in repo root

      - name: Install dependencies
        run: npm ci                    # root package.json / package-lock.json

      - name: Install Playwright browsers & system deps
        run: npx playwright install --with-deps

      # Optional: wait until target is up (for prod/Koyeb)
      # - name: Wait for app
      #   run: npx -y wait-on "$EP_BASE_URL" --http-timeout 60000 --timeout 300000

      - name: Run Playwright tests
        run: npx playwright test -c playwright.config.ts --reporter=github

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

      - name: Upload traces & screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          retention-days: 7
